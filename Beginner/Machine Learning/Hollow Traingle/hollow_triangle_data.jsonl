{"text": "# Write a Python function to generate a hollow triangle pattern\ndef hollow_triangle(n):\n    for i in range(1, n + 1):\n        if i == 1:\n            print(' ' * (n - i) + '*')\n        elif i == n:\n            print('*' * (2 * n - 1))\n        else:\n            print(' ' * (n - i) + '*' + ' ' * (2 * i - 3) + '*')"}
{"text": "# Function to print a hollow triangle with stars\ndef print_triangle(size):\n    for row in range(1, size + 1):\n        if row == 1:\n            print(' ' * (size - row) + '*')\n        elif row == size:\n            print('*' * (2 * size - 1))\n        else:\n            spaces = ' ' * (2 * row - 3)\n            print(' ' * (size - row) + '*' + spaces + '*')"}
{"text": "# Display a right-angled hollow triangle pattern\ndef right_hollow_triangle(n):\n    for i in range(1, n + 1):\n        if i == 1 or i == n:\n            print('*' * i)\n        else:\n            print('*' + ' ' * (i - 2) + '*')"}
{"text": "# Print a mirrored hollow triangle\ndef mirrored_triangle(n):\n    for i in range(1, n + 1):\n        if i == n:\n            print('*' * n)\n        else:\n            print(' ' * (n - i) + '*' + ' ' * (i - 2) + ('*' if i > 1 else ''))"}
{"text": "# Script to print a hollow triangle of height 6\nn = 6\nfor i in range(1, n + 1):\n    if i == 1:\n        print(' ' * (n - i) + '*')\n    elif i == n:\n        print('*' * (2 * n - 1))\n    else:\n        print(' ' * (n - i) + '*' + ' ' * (2 * i - 3) + '*')"}
{"text": "# Generates a centered hollow triangle\ndef centered_triangle(levels):\n    for level in range(1, levels + 1):\n        if level == 1:\n            print(' ' * (levels - level) + '*')\n        elif level == levels:\n            print('*' * (2 * levels - 1))\n        else:\n            print(' ' * (levels - level) + '*' + ' ' * (2 * level - 3) + '*')"}
{"text": "# Print an isosceles hollow triangle\ndef isosceles_triangle(height):\n    for i in range(1, height + 1):\n        if i == 1:\n            print(' ' * (height - i) + '*')\n        elif i == height:\n            print('*' * (2 * height - 1))\n        else:\n            print(' ' * (height - i) + '*' + ' ' * (2 * i - 3) + '*')"}
{"text": "# Print a hollow triangle using while loop\nn = 5\ni = 1\nwhile i <= n:\n    if i == 1:\n        print(' ' * (n - i) + '*')\n    elif i == n:\n        print('*' * (2 * n - 1))\n    else:\n        print(' ' * (n - i) + '*' + ' ' * (2 * i - 3) + '*')\n    i += 1"}
{"text": "# Function to draw a hollow triangle with given height\ndef draw_hollow_triangle(height):\n    for row in range(1, height + 1):\n        if row == 1:\n            print(' ' * (height - row) + '*')\n        elif row == height:\n            print('*' * (2 * height - 1))\n        else:\n            print(' ' * (height - row) + '*' + ' ' * (2 * row - 3) + '*')"}
{"text": "# Python code to print a hollow triangle of 4 rows\nrows = 4\nfor i in range(1, rows + 1):\n    if i == 1:\n        print(' ' * (rows - i) + '*')\n    elif i == rows:\n        print('*' * (2 * rows - 1))\n    else:\n        print(' ' * (rows - i) + '*' + ' ' * (2 * i - 3) + '*')"}
